#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



public partial class COL2019 : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertArtnametable(Artnametable instance);
  partial void UpdateArtnametable(Artnametable instance);
  partial void DeleteArtnametable(Artnametable instance);
  partial void InsertTaxon(Taxon instance);
  partial void UpdateTaxon(Taxon instance);
  partial void DeleteTaxon(Taxon instance);
  #endregion
	
	public COL2019(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public COL2019(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public COL2019(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public COL2019(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Artnametable> Artnametable
	{
		get
		{
			return this.GetTable<Artnametable>();
		}
	}
	
	public System.Data.Linq.Table<Description> Description
	{
		get
		{
			return this.GetTable<Description>();
		}
	}
	
	public System.Data.Linq.Table<Distribution> Distribution
	{
		get
		{
			return this.GetTable<Distribution>();
		}
	}
	
	public System.Data.Linq.Table<Reference> Reference
	{
		get
		{
			return this.GetTable<Reference>();
		}
	}
	
	public System.Data.Linq.Table<Taxon> Taxon
	{
		get
		{
			return this.GetTable<Taxon>();
		}
	}
	
	public System.Data.Linq.Table<VernacularName> VernacularName
	{
		get
		{
			return this.GetTable<VernacularName>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.artnametable")]
public partial class Artnametable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private System.Nullable<int> _Taxonid;
	
	private string _Lang;
	
	private string _Articlename;
	
	private EntityRef<Taxon> _Taxon;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTaxonidChanging(System.Nullable<int> value);
    partial void OnTaxonidChanged();
    partial void OnLangChanging(string value);
    partial void OnLangChanged();
    partial void OnArticlenameChanging(string value);
    partial void OnArticlenameChanged();
    #endregion
	
	public Artnametable()
	{
		this._Taxon = default(EntityRef<Taxon>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id", Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="taxonid", Storage="_Taxonid", DbType="Int")]
	public System.Nullable<int> Taxonid
	{
		get
		{
			return this._Taxonid;
		}
		set
		{
			if ((this._Taxonid != value))
			{
				this.OnTaxonidChanging(value);
				this.SendPropertyChanging();
				this._Taxonid = value;
				this.SendPropertyChanged("Taxonid");
				this.OnTaxonidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="lang", Storage="_Lang", DbType="VarChar(3)")]
	public string Lang
	{
		get
		{
			return this._Lang;
		}
		set
		{
			if ((this._Lang != value))
			{
				this.OnLangChanging(value);
				this.SendPropertyChanging();
				this._Lang = value;
				this.SendPropertyChanged("Lang");
				this.OnLangChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="articlename", Storage="_Articlename", DbType="NVarChar(100)")]
	public string Articlename
	{
		get
		{
			return this._Articlename;
		}
		set
		{
			if ((this._Articlename != value))
			{
				this.OnArticlenameChanging(value);
				this.SendPropertyChanging();
				this._Articlename = value;
				this.SendPropertyChanged("Articlename");
				this.OnArticlenameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__artnameta__taxon__4F47C5E3", Storage="_Taxon", ThisKey="Taxonid", OtherKey="TaxonID", IsForeignKey=true)]
	public Taxon Taxon
	{
		get
		{
			return this._Taxon.Entity;
		}
		set
		{
			Taxon previousValue = this._Taxon.Entity;
			if (((previousValue != value) 
						|| (this._Taxon.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Taxon.Entity = null;
					previousValue.Artnametable.Remove(this);
				}
				this._Taxon.Entity = value;
				if ((value != null))
				{
					value.Artnametable.Add(this);
					this._Taxonid = value.TaxonID;
				}
				else
				{
					this._Taxonid = default(Nullable<int>);
				}
				this.SendPropertyChanged("Taxon");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Description")]
public partial class Description
{
	
	private int _TaxonID;
	
	private string _Description1;
	
	public Description()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="taxonID", Storage="_TaxonID", DbType="Int NOT NULL")]
	public int TaxonID
	{
		get
		{
			return this._TaxonID;
		}
		set
		{
			if ((this._TaxonID != value))
			{
				this._TaxonID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="description", Storage="_Description1", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Description1
	{
		get
		{
			return this._Description1;
		}
		set
		{
			if ((this._Description1 != value))
			{
				this._Description1 = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Distribution")]
public partial class Distribution
{
	
	private int _TaxonID;
	
	private string _LocationID;
	
	private string _Locality;
	
	private string _OccurrenceStatus;
	
	private string _EstablishmentMeans;
	
	public Distribution()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="taxonID", Storage="_TaxonID", DbType="Int NOT NULL")]
	public int TaxonID
	{
		get
		{
			return this._TaxonID;
		}
		set
		{
			if ((this._TaxonID != value))
			{
				this._TaxonID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="locationID", Storage="_LocationID", DbType="NVarChar(255)")]
	public string LocationID
	{
		get
		{
			return this._LocationID;
		}
		set
		{
			if ((this._LocationID != value))
			{
				this._LocationID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="locality", Storage="_Locality", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Locality
	{
		get
		{
			return this._Locality;
		}
		set
		{
			if ((this._Locality != value))
			{
				this._Locality = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="occurrenceStatus", Storage="_OccurrenceStatus", DbType="NVarChar(255)")]
	public string OccurrenceStatus
	{
		get
		{
			return this._OccurrenceStatus;
		}
		set
		{
			if ((this._OccurrenceStatus != value))
			{
				this._OccurrenceStatus = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="establishmentMeans", Storage="_EstablishmentMeans", DbType="NVarChar(255)")]
	public string EstablishmentMeans
	{
		get
		{
			return this._EstablishmentMeans;
		}
		set
		{
			if ((this._EstablishmentMeans != value))
			{
				this._EstablishmentMeans = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reference")]
public partial class Reference
{
	
	private int _TaxonID;
	
	private string _Creator;
	
	private string _Date;
	
	private string _Title;
	
	private string _Description;
	
	private string _Identifier;
	
	private string _Type;
	
	public Reference()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="taxonID", Storage="_TaxonID", DbType="Int NOT NULL")]
	public int TaxonID
	{
		get
		{
			return this._TaxonID;
		}
		set
		{
			if ((this._TaxonID != value))
			{
				this._TaxonID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="creator", Storage="_Creator", DbType="NVarChar(255)")]
	public string Creator
	{
		get
		{
			return this._Creator;
		}
		set
		{
			if ((this._Creator != value))
			{
				this._Creator = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="date", Storage="_Date", DbType="VarChar(255)")]
	public string Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this._Date = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="title", Storage="_Title", DbType="NVarChar(1023)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this._Title = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="description", Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this._Description = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="identifier", Storage="_Identifier", DbType="VarChar(255)")]
	public string Identifier
	{
		get
		{
			return this._Identifier;
		}
		set
		{
			if ((this._Identifier != value))
			{
				this._Identifier = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="type", Storage="_Type", DbType="VarChar(255)")]
	public string Type
	{
		get
		{
			return this._Type;
		}
		set
		{
			if ((this._Type != value))
			{
				this._Type = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Taxon")]
public partial class Taxon : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _TaxonID;
	
	private string _Identifier;
	
	private string _DatasetID;
	
	private string _DatasetName;
	
	private System.Nullable<int> _AcceptedNameUsageID;
	
	private System.Nullable<int> _ParentNameUsageID;
	
	private string _TaxonomicStatus;
	
	private string _TaxonRank;
	
	private string _VerbatimTaxonRank;
	
	private string _ScientificName;
	
	private string _Kingdom;
	
	private string _Phylum;
	
	private string _Class;
	
	private string _Order;
	
	private string _Superfamily;
	
	private string _Family;
	
	private string _GenericName;
	
	private string _Genus;
	
	private string _Subgenus;
	
	private string _SpecificEpithet;
	
	private string _InfraspecificEpithet;
	
	private string _ScientificNameAuthorship;
	
	private string _Source;
	
	private string _NamePublishedIn;
	
	private string _NameAccordingTo;
	
	private string _Modified;
	
	private string _Description;
	
	private string _TaxonConceptID;
	
	private string _ScientificNameID;
	
	private string _References;
	
	private string _IsExtinct;
	
	private EntitySet<Artnametable> _Artnametable;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaxonIDChanging(int value);
    partial void OnTaxonIDChanged();
    partial void OnIdentifierChanging(string value);
    partial void OnIdentifierChanged();
    partial void OnDatasetIDChanging(string value);
    partial void OnDatasetIDChanged();
    partial void OnDatasetNameChanging(string value);
    partial void OnDatasetNameChanged();
    partial void OnAcceptedNameUsageIDChanging(System.Nullable<int> value);
    partial void OnAcceptedNameUsageIDChanged();
    partial void OnParentNameUsageIDChanging(System.Nullable<int> value);
    partial void OnParentNameUsageIDChanged();
    partial void OnTaxonomicStatusChanging(string value);
    partial void OnTaxonomicStatusChanged();
    partial void OnTaxonRankChanging(string value);
    partial void OnTaxonRankChanged();
    partial void OnVerbatimTaxonRankChanging(string value);
    partial void OnVerbatimTaxonRankChanged();
    partial void OnScientificNameChanging(string value);
    partial void OnScientificNameChanged();
    partial void OnKingdomChanging(string value);
    partial void OnKingdomChanged();
    partial void OnPhylumChanging(string value);
    partial void OnPhylumChanged();
    partial void OnClassChanging(string value);
    partial void OnClassChanged();
    partial void OnOrderChanging(string value);
    partial void OnOrderChanged();
    partial void OnSuperfamilyChanging(string value);
    partial void OnSuperfamilyChanged();
    partial void OnFamilyChanging(string value);
    partial void OnFamilyChanged();
    partial void OnGenericNameChanging(string value);
    partial void OnGenericNameChanged();
    partial void OnGenusChanging(string value);
    partial void OnGenusChanged();
    partial void OnSubgenusChanging(string value);
    partial void OnSubgenusChanged();
    partial void OnSpecificEpithetChanging(string value);
    partial void OnSpecificEpithetChanged();
    partial void OnInfraspecificEpithetChanging(string value);
    partial void OnInfraspecificEpithetChanged();
    partial void OnScientificNameAuthorshipChanging(string value);
    partial void OnScientificNameAuthorshipChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnNamePublishedInChanging(string value);
    partial void OnNamePublishedInChanged();
    partial void OnNameAccordingToChanging(string value);
    partial void OnNameAccordingToChanged();
    partial void OnModifiedChanging(string value);
    partial void OnModifiedChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTaxonConceptIDChanging(string value);
    partial void OnTaxonConceptIDChanged();
    partial void OnScientificNameIDChanging(string value);
    partial void OnScientificNameIDChanged();
    partial void OnReferencesChanging(string value);
    partial void OnReferencesChanged();
    partial void OnIsExtinctChanging(string value);
    partial void OnIsExtinctChanged();
    #endregion
	
	public Taxon()
	{
		this._Artnametable = new EntitySet<Artnametable>(new Action<Artnametable>(this.attach_Artnametable), new Action<Artnametable>(this.detach_Artnametable));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="taxonID", Storage="_TaxonID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int TaxonID
	{
		get
		{
			return this._TaxonID;
		}
		set
		{
			if ((this._TaxonID != value))
			{
				this.OnTaxonIDChanging(value);
				this.SendPropertyChanging();
				this._TaxonID = value;
				this.SendPropertyChanged("TaxonID");
				this.OnTaxonIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="identifier", Storage="_Identifier", DbType="VarChar(255)")]
	public string Identifier
	{
		get
		{
			return this._Identifier;
		}
		set
		{
			if ((this._Identifier != value))
			{
				this.OnIdentifierChanging(value);
				this.SendPropertyChanging();
				this._Identifier = value;
				this.SendPropertyChanged("Identifier");
				this.OnIdentifierChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="datasetID", Storage="_DatasetID", DbType="VarChar(255)")]
	public string DatasetID
	{
		get
		{
			return this._DatasetID;
		}
		set
		{
			if ((this._DatasetID != value))
			{
				this.OnDatasetIDChanging(value);
				this.SendPropertyChanging();
				this._DatasetID = value;
				this.SendPropertyChanged("DatasetID");
				this.OnDatasetIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="datasetName", Storage="_DatasetName", DbType="VarChar(255)")]
	public string DatasetName
	{
		get
		{
			return this._DatasetName;
		}
		set
		{
			if ((this._DatasetName != value))
			{
				this.OnDatasetNameChanging(value);
				this.SendPropertyChanging();
				this._DatasetName = value;
				this.SendPropertyChanged("DatasetName");
				this.OnDatasetNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="acceptedNameUsageID", Storage="_AcceptedNameUsageID", DbType="Int")]
	public System.Nullable<int> AcceptedNameUsageID
	{
		get
		{
			return this._AcceptedNameUsageID;
		}
		set
		{
			if ((this._AcceptedNameUsageID != value))
			{
				this.OnAcceptedNameUsageIDChanging(value);
				this.SendPropertyChanging();
				this._AcceptedNameUsageID = value;
				this.SendPropertyChanged("AcceptedNameUsageID");
				this.OnAcceptedNameUsageIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="parentNameUsageID", Storage="_ParentNameUsageID", DbType="Int")]
	public System.Nullable<int> ParentNameUsageID
	{
		get
		{
			return this._ParentNameUsageID;
		}
		set
		{
			if ((this._ParentNameUsageID != value))
			{
				this.OnParentNameUsageIDChanging(value);
				this.SendPropertyChanging();
				this._ParentNameUsageID = value;
				this.SendPropertyChanged("ParentNameUsageID");
				this.OnParentNameUsageIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="taxonomicStatus", Storage="_TaxonomicStatus", DbType="VarChar(255)")]
	public string TaxonomicStatus
	{
		get
		{
			return this._TaxonomicStatus;
		}
		set
		{
			if ((this._TaxonomicStatus != value))
			{
				this.OnTaxonomicStatusChanging(value);
				this.SendPropertyChanging();
				this._TaxonomicStatus = value;
				this.SendPropertyChanged("TaxonomicStatus");
				this.OnTaxonomicStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="taxonRank", Storage="_TaxonRank", DbType="VarChar(255)")]
	public string TaxonRank
	{
		get
		{
			return this._TaxonRank;
		}
		set
		{
			if ((this._TaxonRank != value))
			{
				this.OnTaxonRankChanging(value);
				this.SendPropertyChanging();
				this._TaxonRank = value;
				this.SendPropertyChanged("TaxonRank");
				this.OnTaxonRankChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="verbatimTaxonRank", Storage="_VerbatimTaxonRank", DbType="VarChar(255)")]
	public string VerbatimTaxonRank
	{
		get
		{
			return this._VerbatimTaxonRank;
		}
		set
		{
			if ((this._VerbatimTaxonRank != value))
			{
				this.OnVerbatimTaxonRankChanging(value);
				this.SendPropertyChanging();
				this._VerbatimTaxonRank = value;
				this.SendPropertyChanged("VerbatimTaxonRank");
				this.OnVerbatimTaxonRankChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="scientificName", Storage="_ScientificName", DbType="NVarChar(255)")]
	public string ScientificName
	{
		get
		{
			return this._ScientificName;
		}
		set
		{
			if ((this._ScientificName != value))
			{
				this.OnScientificNameChanging(value);
				this.SendPropertyChanging();
				this._ScientificName = value;
				this.SendPropertyChanged("ScientificName");
				this.OnScientificNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="kingdom", Storage="_Kingdom", DbType="VarChar(255)")]
	public string Kingdom
	{
		get
		{
			return this._Kingdom;
		}
		set
		{
			if ((this._Kingdom != value))
			{
				this.OnKingdomChanging(value);
				this.SendPropertyChanging();
				this._Kingdom = value;
				this.SendPropertyChanged("Kingdom");
				this.OnKingdomChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="phylum", Storage="_Phylum", DbType="VarChar(255)")]
	public string Phylum
	{
		get
		{
			return this._Phylum;
		}
		set
		{
			if ((this._Phylum != value))
			{
				this.OnPhylumChanging(value);
				this.SendPropertyChanging();
				this._Phylum = value;
				this.SendPropertyChanged("Phylum");
				this.OnPhylumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="class", Storage="_Class", DbType="VarChar(255)")]
	public string Class
	{
		get
		{
			return this._Class;
		}
		set
		{
			if ((this._Class != value))
			{
				this.OnClassChanging(value);
				this.SendPropertyChanging();
				this._Class = value;
				this.SendPropertyChanged("Class");
				this.OnClassChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="order", Storage="_Order", DbType="VarChar(255)")]
	public string Order
	{
		get
		{
			return this._Order;
		}
		set
		{
			if ((this._Order != value))
			{
				this.OnOrderChanging(value);
				this.SendPropertyChanging();
				this._Order = value;
				this.SendPropertyChanged("Order");
				this.OnOrderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="superfamily", Storage="_Superfamily", DbType="VarChar(255)")]
	public string Superfamily
	{
		get
		{
			return this._Superfamily;
		}
		set
		{
			if ((this._Superfamily != value))
			{
				this.OnSuperfamilyChanging(value);
				this.SendPropertyChanging();
				this._Superfamily = value;
				this.SendPropertyChanged("Superfamily");
				this.OnSuperfamilyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="family", Storage="_Family", DbType="VarChar(255)")]
	public string Family
	{
		get
		{
			return this._Family;
		}
		set
		{
			if ((this._Family != value))
			{
				this.OnFamilyChanging(value);
				this.SendPropertyChanging();
				this._Family = value;
				this.SendPropertyChanged("Family");
				this.OnFamilyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="genericName", Storage="_GenericName", DbType="VarChar(255)")]
	public string GenericName
	{
		get
		{
			return this._GenericName;
		}
		set
		{
			if ((this._GenericName != value))
			{
				this.OnGenericNameChanging(value);
				this.SendPropertyChanging();
				this._GenericName = value;
				this.SendPropertyChanged("GenericName");
				this.OnGenericNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="genus", Storage="_Genus", DbType="VarChar(255)")]
	public string Genus
	{
		get
		{
			return this._Genus;
		}
		set
		{
			if ((this._Genus != value))
			{
				this.OnGenusChanging(value);
				this.SendPropertyChanging();
				this._Genus = value;
				this.SendPropertyChanged("Genus");
				this.OnGenusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="subgenus", Storage="_Subgenus", DbType="VarChar(255)")]
	public string Subgenus
	{
		get
		{
			return this._Subgenus;
		}
		set
		{
			if ((this._Subgenus != value))
			{
				this.OnSubgenusChanging(value);
				this.SendPropertyChanging();
				this._Subgenus = value;
				this.SendPropertyChanged("Subgenus");
				this.OnSubgenusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="specificEpithet", Storage="_SpecificEpithet", DbType="VarChar(255)")]
	public string SpecificEpithet
	{
		get
		{
			return this._SpecificEpithet;
		}
		set
		{
			if ((this._SpecificEpithet != value))
			{
				this.OnSpecificEpithetChanging(value);
				this.SendPropertyChanging();
				this._SpecificEpithet = value;
				this.SendPropertyChanged("SpecificEpithet");
				this.OnSpecificEpithetChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="infraspecificEpithet", Storage="_InfraspecificEpithet", DbType="VarChar(255)")]
	public string InfraspecificEpithet
	{
		get
		{
			return this._InfraspecificEpithet;
		}
		set
		{
			if ((this._InfraspecificEpithet != value))
			{
				this.OnInfraspecificEpithetChanging(value);
				this.SendPropertyChanging();
				this._InfraspecificEpithet = value;
				this.SendPropertyChanged("InfraspecificEpithet");
				this.OnInfraspecificEpithetChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="scientificNameAuthorship", Storage="_ScientificNameAuthorship", DbType="NVarChar(255)")]
	public string ScientificNameAuthorship
	{
		get
		{
			return this._ScientificNameAuthorship;
		}
		set
		{
			if ((this._ScientificNameAuthorship != value))
			{
				this.OnScientificNameAuthorshipChanging(value);
				this.SendPropertyChanging();
				this._ScientificNameAuthorship = value;
				this.SendPropertyChanged("ScientificNameAuthorship");
				this.OnScientificNameAuthorshipChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="source", Storage="_Source", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Source
	{
		get
		{
			return this._Source;
		}
		set
		{
			if ((this._Source != value))
			{
				this.OnSourceChanging(value);
				this.SendPropertyChanging();
				this._Source = value;
				this.SendPropertyChanged("Source");
				this.OnSourceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="namePublishedIn", Storage="_NamePublishedIn", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string NamePublishedIn
	{
		get
		{
			return this._NamePublishedIn;
		}
		set
		{
			if ((this._NamePublishedIn != value))
			{
				this.OnNamePublishedInChanging(value);
				this.SendPropertyChanging();
				this._NamePublishedIn = value;
				this.SendPropertyChanged("NamePublishedIn");
				this.OnNamePublishedInChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="nameAccordingTo", Storage="_NameAccordingTo", DbType="NVarChar(255)")]
	public string NameAccordingTo
	{
		get
		{
			return this._NameAccordingTo;
		}
		set
		{
			if ((this._NameAccordingTo != value))
			{
				this.OnNameAccordingToChanging(value);
				this.SendPropertyChanging();
				this._NameAccordingTo = value;
				this.SendPropertyChanged("NameAccordingTo");
				this.OnNameAccordingToChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="modified", Storage="_Modified", DbType="VarChar(255)")]
	public string Modified
	{
		get
		{
			return this._Modified;
		}
		set
		{
			if ((this._Modified != value))
			{
				this.OnModifiedChanging(value);
				this.SendPropertyChanging();
				this._Modified = value;
				this.SendPropertyChanged("Modified");
				this.OnModifiedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="description", Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="taxonConceptID", Storage="_TaxonConceptID", DbType="NVarChar(255)")]
	public string TaxonConceptID
	{
		get
		{
			return this._TaxonConceptID;
		}
		set
		{
			if ((this._TaxonConceptID != value))
			{
				this.OnTaxonConceptIDChanging(value);
				this.SendPropertyChanging();
				this._TaxonConceptID = value;
				this.SendPropertyChanged("TaxonConceptID");
				this.OnTaxonConceptIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="scientificNameID", Storage="_ScientificNameID", DbType="NVarChar(255)")]
	public string ScientificNameID
	{
		get
		{
			return this._ScientificNameID;
		}
		set
		{
			if ((this._ScientificNameID != value))
			{
				this.OnScientificNameIDChanging(value);
				this.SendPropertyChanging();
				this._ScientificNameID = value;
				this.SendPropertyChanged("ScientificNameID");
				this.OnScientificNameIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="references", Storage="_References", DbType="NVarChar(255)")]
	public string References
	{
		get
		{
			return this._References;
		}
		set
		{
			if ((this._References != value))
			{
				this.OnReferencesChanging(value);
				this.SendPropertyChanging();
				this._References = value;
				this.SendPropertyChanged("References");
				this.OnReferencesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="isExtinct", Storage="_IsExtinct", DbType="VarChar(10)")]
	public string IsExtinct
	{
		get
		{
			return this._IsExtinct;
		}
		set
		{
			if ((this._IsExtinct != value))
			{
				this.OnIsExtinctChanging(value);
				this.SendPropertyChanging();
				this._IsExtinct = value;
				this.SendPropertyChanged("IsExtinct");
				this.OnIsExtinctChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__artnameta__taxon__4F47C5E3", Storage="_Artnametable", ThisKey="TaxonID", OtherKey="Taxonid", DeleteRule="NO ACTION")]
	public EntitySet<Artnametable> Artnametable
	{
		get
		{
			return this._Artnametable;
		}
		set
		{
			this._Artnametable.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Artnametable(Artnametable entity)
	{
		this.SendPropertyChanging();
		entity.Taxon = this;
	}
	
	private void detach_Artnametable(Artnametable entity)
	{
		this.SendPropertyChanging();
		entity.Taxon = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VernacularName")]
public partial class VernacularName
{
	
	private System.Nullable<int> _TaxonID;
	
	private string _VernacularName1;
	
	private string _Language;
	
	private string _CountryCode;
	
	private string _Locality;
	
	private string _Transliteration;
	
	public VernacularName()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="taxonID", Storage="_TaxonID", DbType="Int")]
	public System.Nullable<int> TaxonID
	{
		get
		{
			return this._TaxonID;
		}
		set
		{
			if ((this._TaxonID != value))
			{
				this._TaxonID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="vernacularName", Storage="_VernacularName1", DbType="NVarChar(255)")]
	public string VernacularName1
	{
		get
		{
			return this._VernacularName1;
		}
		set
		{
			if ((this._VernacularName1 != value))
			{
				this._VernacularName1 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="language", Storage="_Language", DbType="NVarChar(255)")]
	public string Language
	{
		get
		{
			return this._Language;
		}
		set
		{
			if ((this._Language != value))
			{
				this._Language = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="countryCode", Storage="_CountryCode", DbType="NVarChar(255)")]
	public string CountryCode
	{
		get
		{
			return this._CountryCode;
		}
		set
		{
			if ((this._CountryCode != value))
			{
				this._CountryCode = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="locality", Storage="_Locality", DbType="NVarChar(255)")]
	public string Locality
	{
		get
		{
			return this._Locality;
		}
		set
		{
			if ((this._Locality != value))
			{
				this._Locality = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="transliteration", Storage="_Transliteration", DbType="NVarChar(255)")]
	public string Transliteration
	{
		get
		{
			return this._Transliteration;
		}
		set
		{
			if ((this._Transliteration != value))
			{
				this._Transliteration = value;
			}
		}
	}
}
#pragma warning restore 1591
